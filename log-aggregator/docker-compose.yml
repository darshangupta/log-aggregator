version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-net

  producer:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: log-producer
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      LOG_TOPIC: logs
      LOG_RATE: 5
    command: /app/docker/run-producer.sh
    networks:
      - kafka-net

  consumer:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: log-consumer
    depends_on:
      - kafka
      - producer
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      LOG_TOPIC: logs
      LOG_OUTPUT: /app/logs/logs.json
    volumes:
      - ./logs:/app/logs
    command: /app/docker/run-consumer.sh
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge 